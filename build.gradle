apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'kotlin'

repositories {
    jcenter()
}
configurations {
    shadow
}
buildscript {
    ext.kotlin_version = '1.3.0'
    repositories {
        jcenter()
        maven {
            url 'https://jitpack.io'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
dependencies {
    compile 'com.sparkjava:spark-core:2.8.0'
    compile 'org.codehaus.janino:janino:3.0.11'
    compile 'org.codehaus.janino:commons-compiler-jdk:3.0.11'
    compile 'com.eclipsesource.minimal-json:minimal-json:0.9.5'
    compile 'org.slf4j:slf4j-simple:1.7.25'
    compile 'commons-cli:commons-cli:20040117.000000'
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    compile 'com.puppycrawl.tools:checkstyle:8.16'
    shadow 'com.sparkjava:spark-core:2.8.0'
    shadow 'org.codehaus.janino:janino:3.0.11'
    shadow 'org.codehaus.janino:commons-compiler-jdk:3.0.11'
    shadow 'com.eclipsesource.minimal-json:minimal-json:0.9.5'
    shadow 'org.slf4j:slf4j-simple:1.7.25'
    shadow 'commons-cli:commons-cli:20040117.000000'
    shadow 'com.google.code.gson:gson:2.8.5'
    shadow 'com.puppycrawl.tools:checkstyle:8.16'
    testCompile 'org.testng:testng:6.9.6'
}
checkstyle {
    toolVersion "8.12"
    checkstyleTest.enabled = false
    configFile = new File(rootDir, "config/checkstyle.xml")
}
test {
    useTestNG()
}
jar {
    from {
        configurations.shadow.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }
    manifest {
        attributes 'Main-Class': 'WebServer'
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
// vim: ts=4:sw=4:et:ft=groovy
